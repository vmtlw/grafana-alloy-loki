services:
  grafana:
    container_name: grafana
    image: grafana/grafana
    restart: unless-stopped
    ports:
      - "3000:3000"
    volumes:
      - "grafana-data:/var/lib/grafana"
      - "provisioning:/etc/grafana/provisioning"
    networks:
      - proxy
    environment:
      GF_SECURITY_ADMIN_USER: "admin"
      GF_SECURITY_ADMIN_PASSWORD: "admin"
      GF_USERS_ALLOW_SIGN_UP: "false"
    depends_on:
      - loki
    entrypoint:
      - sh
      - -euc
      - |
        mkdir -p /etc/grafana/provisioning/datasources
        cat <<EOF > /etc/grafana/provisioning/datasources/ds.yaml
        apiVersion: 1
        datasources:
          - name: Loki
            type: loki
            access: proxy
            url: http://loki:3100
            jsonData:
              httpHeaderName1: "X-Scope-OrgID"
            secureJsonData:
              httpHeaderValue1: "tenant1"
        EOF
        /run.sh

  alloy:
    image: grafana/alloy
    container_name: alloy
    restart: unless-stopped
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./config.alloy:/etc/alloy/config.alloy
    command: "run --server.http.listen-addr=0.0.0.0:12345 /etc/alloy/config.alloy"
    networks:
      - proxy


  loki:
    image: grafana/loki
    container_name: loki
    restart: unless-stopped
    volumes:
      - ./loki-config.yaml:/mnt/config/loki-config.yaml
    command: "-config.file=/mnt/config/loki-config.yaml"
    networks:
      - proxy


volumes:
  grafana-data:
  provisioning:

networks:
  proxy:
    name: proxy
    #    external: true

