services:
  grafana:
    container_name: grafana
    image: grafana/grafana
    restart: unless-stopped
    ports:
      - "3000:3000"
    volumes:
      - "grafana-data:/var/lib/grafana"
      - "provisioning:/etc/grafana/provisioning"
    networks:
      - proxy
    environment:
      GF_SECURITY_ADMIN_USER: "admin"
      GF_SECURITY_ADMIN_PASSWORD: "admin"
      GF_USERS_ALLOW_SIGN_UP: "false"
      GF_FEATURE_TOGGLES_ENABLE: "traceqlEditor metricsSummary"
    depends_on:
      - loki
      - tempo
    entrypoint:
      - sh
      - -euc
      - |
        mkdir -p /etc/grafana/provisioning/datasources
        cat <<EOF > /etc/grafana/provisioning/datasources/ds.yaml
        apiVersion: 1
        datasources:
          - name: Prometheus
            type: prometheus
            access: proxy
            url: http://prometheus:9090
            isDefault: true
          - name: Loki
            type: loki
            access: proxy
            url: http://loki:3100
            jsonData:
              httpHeaderName1: "X-Scope-OrgID"
            secureJsonData:
              httpHeaderValue1: "tenant1"

          - name: Tempo
            type: tempo
            access: proxy
            url: http://tempo:3200
            basicAuth: false
            jsonData:
              httpMethod: GET
              tracesToLogs:
                datasourceUid: Loki
                filterByTraceID: true
                mapTagNamesEnabled: true
                spanStartTimeShift: "1h"
                spanEndTimeShift: "1h"
              tracesToMetrics:
                datasourceUid: Prometheus
                tags: [{ key: "service.name", value: "job" }]
              serviceMap:
                datasourceUid: Prometheus
        EOF
        /run.sh

  alloy:
    image: grafana/alloy
    container_name: alloy
    restart: unless-stopped
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./config.alloy:/etc/alloy/config.alloy
    command: "run --server.http.listen-addr=0.0.0.0:12345 /etc/alloy/config.alloy"
    networks:
      - proxy


  loki:
    image: grafana/loki
    container_name: loki
    restart: unless-stopped
    volumes:
      - ./loki-config.yaml:/mnt/config/loki-config.yaml
    command: "-config.file=/mnt/config/loki-config.yaml"
    networks:
      - proxy


  tempo:
    image: grafana/tempo:latest
    command: [ "-config.file=/etc/tempo.yaml" ]
    environment:
      - GRPC_TRACE=api
    volumes:
      - ./tempo.yaml:/etc/tempo.yaml
      - tempo-data:/var/tempo
    networks:
      - proxy

  k6-tracing:
    image: ghcr.io/grafana/xk6-client-tracing:v0.0.7
    environment:
      - ENDPOINT=tempo:4317
      - TEMPO_X_SCOPE_ORGID=test
    restart: always
    depends_on:
      - tempo
    networks:
    - proxy

  prometheus:
    image: prom/prometheus:latest
    command:
      - --config.file=/etc/prometheus.yaml
      - --web.enable-remote-write-receiver
      - --enable-feature=exemplar-storage
      - --enable-feature=native-histograms
    volumes:
      - ./prometheus.yaml:/etc/prometheus.yaml
    networks:
      - proxy


volumes:
  grafana-data:
  provisioning:
  tempo-data:

networks:
  proxy:
    name: proxy
    #    external: true

